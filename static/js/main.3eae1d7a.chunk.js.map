{"version":3,"sources":["components/Card.js","actions/listAction.js","actions/cardAction.js","actions/index.js","components/ActionButton.js","components/List.js","components/HeaderBar.js","components/App.js","reducers/listReducer.js","reducers/index.js","store/index.js","index.js"],"names":["CardContainer","styled","div","MyCard","text","id","index","draggableId","String","provided","ref","innerRef","draggableProps","dragHandleProps","Card","CardContent","Typography","gutterBottom","addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","DRAG_HAPPENED","addCard","listID","ADD_CARD","EDIT_LIST_TITLE","DELETE_LIST","ActionButton","state","formOpen","openForm","setState","closeForm","e","handleInputChange","target","value","handleAddList","dispatch","props","handleAddCard","renderAddButton","list","btnText","btnTextOpacity","btnTextColor","btnTextBackground","className","onClick","style","styles","openFormBtnGroup","opacity","color","backgroundColor","Icon","renderForm","placeholder","btnTitle","overflow","minHeight","minWidth","padding","autoFocus","onBlur","onChange","resize","width","outline","border","formBtnGroup","Button","variant","onMouseDown","marginLeft","cursor","this","React","Component","display","alignItems","borderRadius","height","paddingLeft","userSelect","marginTop","connect","ListContainer","StyledInput","input","TitleContainer","DeleteButton","ListTitle","h4","cards","useState","isEditing","setIsEditing","listTitle","setListTitle","handleFocus","select","handleChange","preventDefault","handleFinishEditing","newTitle","editTitle","handleDeleteList","deleteList","droppableId","onSubmit","onFocus","droppableProps","map","card","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","classes","AppBar","position","Toolbar","IconButton","edge","App","onDragEnd","result","destination","source","lists","direction","initialState","cardID","listReducer","action","newList","newState","newCard","newState2","splice","find","listStart","listEnd","combineReducers","Store","createStore","rootReducer","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.3eae1d7a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, Typography, CardContent } from '@material-ui/core';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\n\r\nconst CardContainer = styled.div`\r\nmargin-bottom: 8px;\r\n`;\r\n\r\nconst MyCard = ({text, id, index}) => {\r\n    return (\r\n        <Draggable draggableId={String(id)} index={index}>\r\n            {provided => (\r\n                <CardContainer \r\n                    ref={provided.innerRef} \r\n                    {...provided.draggableProps} \r\n                    {...provided.dragHandleProps}>\r\n                    <Card>\r\n                        <CardContent>\r\n                            <Typography gutterBottom>\r\n                                {text}\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </CardContainer>\r\n            )}\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nexport default MyCard;","import { CONSTANTS } from './index';\r\n\r\nexport const addList = title => {\r\n    return {\r\n        type: CONSTANTS.ADD_LIST,\r\n        payload: title\r\n    };\r\n};\r\n\r\nexport const sort = (\r\n    droppableIdStart,\r\n    droppableIdEnd,\r\n    droppableIndexStart,\r\n    droppableIndexEnd,\r\n    draggableId,\r\n    type\r\n) => {\r\n    return {\r\n        type: CONSTANTS.DRAG_HAPPENED,\r\n        payload: {\r\n            droppableIdStart,\r\n            droppableIdEnd,\r\n            droppableIndexStart,\r\n            droppableIndexEnd,\r\n            draggableId,\r\n            type\r\n        }\r\n    };\r\n};\r\n\r\nexport const editTitle = (listID, newTitle) => {\r\n    return {\r\n      type: CONSTANTS.EDIT_LIST_TITLE,\r\n      payload: {\r\n        listID,\r\n        newTitle\r\n      }\r\n    };\r\n  };\r\n\r\n  export const deleteList = listID => {\r\n    return (dispatch) => {\r\n      return dispatch({\r\n        type: CONSTANTS.DELETE_LIST,\r\n        payload: {\r\n          listID\r\n        }\r\n      });\r\n    };\r\n  };","import { CONSTANTS } from './index';\r\n\r\nexport const addCard = (listID, text) => {\r\n    return {\r\n        type: CONSTANTS.ADD_CARD,\r\n        payload: {text, listID}\r\n    };\r\n};","export * from './listAction';\r\nexport * from './cardAction';\r\n\r\nexport const CONSTANTS = {\r\n    ADD_CARD: \"ADD_CARD\",\r\n    ADD_LIST: \"ADD_LIST\",\r\n    DRAG_HAPPENED: \"DRAG_HAPPENED\",\r\n    EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\r\n    DELETE_LIST: \"DELETE_LIST\",\r\n};\r\n\r\n","import React from 'react';\r\nimport Icon from '@material-ui/core/Icon';\r\nimport { Card, Button } from '@material-ui/core';\r\nimport TextArea from '@material-ui/core/TextareaAutosize';\r\nimport { connect } from 'react-redux';\r\nimport { addList, addCard } from '../actions';\r\n\r\n\r\n\r\nclass ActionButton extends React.Component {\r\n\r\n    state = {\r\n        formOpen: false,\r\n        text: \"\"\r\n    };\r\n\r\n    openForm = () => {\r\n        this.setState({\r\n            formOpen: true\r\n        });\r\n    };\r\n\r\n    closeForm = e => {\r\n        this.setState({\r\n            formOpen: false\r\n        });\r\n    };\r\n\r\n    handleInputChange = e => {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    };\r\n\r\n    handleAddList = () => {\r\n        const { dispatch } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if (text) {\r\n            this.setState({\r\n                text: \"\"\r\n            })\r\n            dispatch(addList(text));\r\n\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    handleAddCard = () => {\r\n        const { dispatch, listID } = this.props;\r\n        const { text } = this.state;\r\n\r\n        if (text) {\r\n            this.setState({\r\n                text: \"\"\r\n            })\r\n            dispatch(addCard(listID, text));\r\n        }\r\n\r\n        return;\r\n    }\r\n\r\n    renderAddButton = () => {\r\n        const { list } = this.props;\r\n\r\n        const btnText = list ? \"Add another list\" : \"Add another card\";\r\n        const btnTextOpacity = list ? 1 : 0.5;\r\n        const btnTextColor = list ? \"white\" : \"inherit\";\r\n        const btnTextBackground = list ? \"rgba(0,15.3,30.2,.15)\" : \"inherit\";\r\n        \r\n        return (\r\n            <div className=\"formBtn\" onClick={this.openForm} \r\n                style={{\r\n                    ...styles.openFormBtnGroup,\r\n                    opacity: btnTextOpacity, \r\n                    color: btnTextColor, \r\n                    backgroundColor: btnTextBackground\r\n                }}>\r\n                <Icon>add</Icon>\r\n                <p>{ btnText }</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderForm = () => {\r\n\r\n        const { list } = this.props;\r\n        const placeholder = list ? \"Enter list title...\" : \"Enter a title for this card...\";\r\n        const btnTitle = list ? \"Add List\" : \"Add Card\";\r\n\r\n        return <div>\r\n            <Card style={{\r\n                overflow: \"visible\",\r\n                minHeight: 80,\r\n                minWidth: 272,\r\n                padding: \"6px 8px 2px\"\r\n            }}>\r\n                <TextArea \r\n                    placeholder={placeholder}\r\n                    autoFocus\r\n                    onBlur={this.closeForm}\r\n                    value={this.state.text}\r\n                    onChange={this.handleInputChange}\r\n                    style={{\r\n                        resize: \"none\",\r\n                        width: \"100%\",\r\n                        overflow: \"hidden\",\r\n                        outline: \"none\",\r\n                        border: \"none\"\r\n                    }}\r\n                />\r\n            </Card>\r\n            <div style={styles.formBtnGroup}>\r\n                <Button \r\n                    variant=\"contained\" \r\n                    style={{color: \"white\", backgroundColor: \"#5aac44\"}}\r\n                    onMouseDown={list ? this.handleAddList : this.handleAddCard}>\r\n                    {btnTitle}\r\n                </Button>\r\n                <Icon style={{marginLeft: 8, cursor: \"pointer\"}}>close</Icon>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    render () {\r\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    openFormBtnGroup: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        cursor: 'pointer',\r\n        borderRadius: 3,\r\n        height: 36,\r\n        width: 272,\r\n        paddingLeft: 10,\r\n        userSelect: 'none'\r\n    },\r\n    formBtnGroup: {\r\n        marginTop: 8,\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    }\r\n}\r\n\r\nexport default connect() (ActionButton);","import React, { useState } from 'react';\r\nimport MyCard from './Card';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport styled from 'styled-components';\r\nimport { connect } from \"react-redux\";\r\nimport { editTitle, deleteList } from \"../actions\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\nimport ActionButton from './ActionButton';\r\n\r\nconst ListContainer = styled.div`\r\n    background-color: #dfe3e6;\r\n    border-radius: 3px;\r\n    width: 300px;\r\n    padding: 5px;\r\n    height: 100%;\r\n    margin-right: 8px;\r\n`;\r\nconst StyledInput = styled.input`\r\n  width: 100%;\r\n  border: none;\r\n  outline-color: blue;\r\n  border-radius: 3px;\r\n  margin-bottom: 3px;\r\n  padding: 5px;\r\n`;\r\n\r\nconst TitleContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst DeleteButton = styled(Icon)`\r\n  cursor: pointer;\r\n  transition: opacity 0.3s ease-in-out;\r\n  opacity: 0.4;\r\n  &:hover {\r\n    opacity: 0.8;\r\n  }\r\n`;\r\n\r\nconst ListTitle = styled.h4`\r\n  transition: background 0.3s ease-in;\r\n  ${TitleContainer}:hover & {\r\n    background: #ccc;\r\n  }\r\n`;\r\n\r\nconst List = ({title, cards, listID, index, dispatch}) => {\r\n\r\n    const [isEditing, setIsEditing] = useState(false);\r\n    const [listTitle, setListTitle] = useState(title);\r\n\r\n    const renderEditInput = () => {\r\n        return (\r\n          <form onSubmit={handleFinishEditing}>\r\n            <StyledInput\r\n              type=\"text\"\r\n              value={listTitle}\r\n              onChange={handleChange}\r\n              autoFocus\r\n              onFocus={handleFocus}\r\n              onBlur={handleFinishEditing}\r\n            />\r\n          </form>\r\n        );\r\n      };\r\n\r\n      const handleFocus = e => {\r\n        e.target.select();\r\n      };\r\n    \r\n      const handleChange = e => {\r\n        e.preventDefault();\r\n        setListTitle(e.target.value);\r\n      };\r\n    \r\n      const handleFinishEditing = e => {\r\n        setIsEditing(false);\r\n        dispatch(editTitle(listID, listTitle));\r\n      };\r\n    \r\n      const handleDeleteList = () => {\r\n        dispatch(deleteList(listID));\r\n      };\r\n\r\n    return (\r\n        <Draggable draggableId={String(listID)} index={index}>\r\n            {provided => (\r\n                <ListContainer \r\n                    {...provided.draggableProps} \r\n                    ref={provided.innerRef} \r\n                    {...provided.dragHandleProps} \r\n                    className=\"listContainer\"\r\n                >\r\n                <Droppable droppableId={String(listID)} type=\"card\">\r\n                {provided => (\r\n                    <div>\r\n                        <div>\r\n                            {isEditing ? (\r\n                                renderEditInput()\r\n                            ) : (\r\n                                <TitleContainer onClick={() => setIsEditing(true)}>\r\n                                    <ListTitle>{listTitle}</ListTitle>\r\n                                    <DeleteButton onClick={handleDeleteList}>\r\n                                        delete\r\n                                    </DeleteButton>\r\n                                </TitleContainer>\r\n                            )}\r\n                        </div>\r\n                        <div \r\n                          {...provided.droppableProps} \r\n                          ref={provided.innerRef}\r\n                        >\r\n                            {cards.map((card, index) => (\r\n                                <MyCard \r\n                                  key={card.id}\r\n                                  text={card.text}\r\n                                  id={card.id}\r\n                                  index={index}\r\n                                  listID={listID}\r\n                                />\r\n                            ))}\r\n                            {provided.placeholder}\r\n                            <ActionButton listID={listID} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n            </ListContainer>\r\n            )}\r\n        </Draggable>\r\n        \r\n    )\r\n}\r\n\r\nexport default connect() (List);","import { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      flexGrow: 1,\r\n    },\r\n  }));\r\n  \r\n  export default function ButtonAppBar() {\r\n    const classes = useStyles();\r\n  \r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Asura\r\n            </Typography>\r\n            <Button color=\"inherit\">Login</Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport List from './List';\nimport HeaderBar from './HeaderBar';\nimport { connect } from 'react-redux';\nimport ActionButton from './ActionButton';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { sort } from '../actions';\nimport styled from 'styled-components';\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nclass App extends Component {\n\n  onDragEnd = (result) => {\n    const { destination, source, draggableId, type } = result;\n    \n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(sort(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      draggableId,\n      type\n    ))\n  };\n\n  render() {\n\n    const { lists } = this.props;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <HeaderBar />\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n                { lists.map((list, index) => (\n                  <List listID={list.id} key={list.id} title={list.title} cards={list.cards} index={index} />\n                ))}\n                {provided.placeholder}\n                <ActionButton list />\n              </ListContainer>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps) (App);","import { CONSTANTS } from '../actions';\r\n\r\nconst initialState = [\r\n    {\r\n        title: \"List One\",\r\n        id: `list-${0}`,\r\n        cards: [\r\n            {\r\n                id: `card-${0}`,\r\n                text: \"This first card is in List One\"\r\n            },\r\n            {\r\n                id: `card-${1}`,\r\n                text: \"This second card is in List Two\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        title: \"List Two\",\r\n        id: `list-${1}`,\r\n        cards: [\r\n            {\r\n                id: `card-${2}`,\r\n                text: \"This first card is in List Two\"\r\n            },\r\n            {\r\n                id: `card-${3}`,\r\n                text: \"This second card is in List Two\"\r\n            },\r\n            {\r\n                id: `card-${4}`,\r\n                text: \"This third card is in List Two\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n\r\nlet cardID = 4;\r\n\r\nconst listReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n\r\n        case CONSTANTS.ADD_LIST: {\r\n            const { title, id} = action.payload;\r\n            const newList = {\r\n                title: title,\r\n                id: `list-${id}`,\r\n                cards: []\r\n            };\r\n\r\n            const newState = { ...state, [`list-${id}`]: newList};\r\n\r\n            return newState;\r\n        }\r\n            \r\n\r\n        case CONSTANTS.ADD_CARD: {\r\n            const newCard = {\r\n                text: action.payload.text,\r\n                id: `card-${cardID}`\r\n            };\r\n            cardID += 1;\r\n\r\n            const newState = state.map(list => {\r\n                if (list.id === action.payload.listID) {\r\n                    return {\r\n                        ...list,\r\n                        cards: [...list.cards, newCard]\r\n                    };\r\n                } else {\r\n                    return list;\r\n                }\r\n            });\r\n\r\n            return newState;\r\n        }\r\n\r\n        case CONSTANTS.DRAG_HAPPENED:\r\n            const { \r\n                droppableIdStart,\r\n                droppableIdEnd,\r\n                droppableIndexStart,\r\n                droppableIndexEnd,\r\n                type\r\n            } = action.payload;\r\n\r\n            const newState2 = [...state];\r\n\r\n            if(type === \"list\") {\r\n                const list = newState2.splice(droppableIndexStart, 1);\r\n                newState2.splice(droppableIndexEnd, 0, ...list);\r\n                \r\n                return newState2;\r\n            }\r\n\r\n            if(droppableIdStart === droppableIdEnd) {\r\n                const list = state.find(list => droppableIdStart === list.id);\r\n                const card = list.cards.splice(droppableIndexStart, 1);\r\n                list.cards.splice(droppableIndexEnd, 0, ...card);\r\n            }\r\n\r\n            if(droppableIdStart !== droppableIdEnd) {\r\n                const listStart = state.find(list => droppableIdStart === list.id);\r\n                const card = listStart.cards.splice(droppableIndexStart, 1);\r\n                const listEnd = state.find(list => droppableIdEnd === list.id);\r\n\r\n                listEnd.cards.splice(droppableIndexEnd, 0, ...card);\r\n            }\r\n\r\n            return newState2;\r\n\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default listReducer;","import { combineReducers } from \"redux\";\r\nimport listReducer from \"./listReducer\";\r\n\r\nexport default combineReducers({\r\n    lists: listReducer\r\n});","import { createStore } from 'redux';\r\nimport rootReducer from '../reducers';\r\n\r\nconst Store = createStore(rootReducer);\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport Store from './store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(<Provider store={Store}><App /></Provider>,document.getElementById(\"root\"));"],"sourceRoot":""}